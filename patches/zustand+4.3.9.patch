diff --git a/node_modules/zustand/esm/index.mjs b/node_modules/zustand/esm/index.mjs
index 4afb17d..1e55a91 100644
--- a/node_modules/zustand/esm/index.mjs
+++ b/node_modules/zustand/esm/index.mjs
@@ -16,7 +16,7 @@ function useStore(api, selector = api.getState, equalityFn) {
   return slice;
 }
 const createImpl = (createState) => {
-  if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production" && typeof createState !== "function") {
+  if (__DEV__ && typeof createState !== "function") {
     console.warn(
       "[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`."
     );
@@ -28,7 +28,7 @@ const createImpl = (createState) => {
 };
 const create = (createState) => createState ? createImpl(createState) : createImpl;
 var react = (createState) => {
-  if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production") {
+  if (__DEV__ && typeof createState !== "function") {
     console.warn(
       "[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`."
     );
diff --git a/node_modules/zustand/esm/middleware.mjs b/node_modules/zustand/esm/middleware.mjs
index c0b9cad..fcaa0c8 100644
--- a/node_modules/zustand/esm/middleware.mjs
+++ b/node_modules/zustand/esm/middleware.mjs
@@ -39,11 +39,11 @@ const devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {
   const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;
   let extensionConnector;
   try {
-    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== "production") && window.__REDUX_DEVTOOLS_EXTENSION__;
+    extensionConnector = (enabled != null ? enabled : __DEV__) && window.__REDUX_DEVTOOLS_EXTENSION__;
   } catch (e) {
   }
   if (!extensionConnector) {
-    if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production" && enabled) {
+    if (__DEV__ && enabled) {
       console.warn(
         "[zustand devtools middleware] Please install/enable Redux devtools extension"
       );
@@ -97,7 +97,7 @@ const devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {
     let didWarnAboutReservedActionType = false;
     const originalDispatch = api.dispatch;
     api.dispatch = (...a) => {
-      if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production" && a[0].type === "__setState" && !didWarnAboutReservedActionType) {
+      if (__DEV__ && a[0].type === "__setState" && !didWarnAboutReservedActionType) {
         console.warn(
           '[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'
         );
@@ -569,7 +569,7 @@ const newImpl = (config, baseOptions) => (set, get, api) => {
 };
 const persistImpl = (config, baseOptions) => {
   if ("getStorage" in baseOptions || "serialize" in baseOptions || "deserialize" in baseOptions) {
-    if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production") {
+    if (__DEV__) {
       console.warn(
         "[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead."
       );
diff --git a/node_modules/zustand/esm/vanilla.mjs b/node_modules/zustand/esm/vanilla.mjs
index 89bcc90..9dff695 100644
--- a/node_modules/zustand/esm/vanilla.mjs
+++ b/node_modules/zustand/esm/vanilla.mjs
@@ -15,7 +15,7 @@ const createStoreImpl = (createState) => {
     return () => listeners.delete(listener);
   };
   const destroy = () => {
-    if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production") {
+    if (__DEV__) {
       console.warn(
         "[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."
       );
@@ -28,7 +28,7 @@ const createStoreImpl = (createState) => {
 };
 const createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;
 var vanilla = (createState) => {
-  if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production") {
+  if (__DEV__) {
     console.warn(
       "[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'."
     );
